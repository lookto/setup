[
    // https://code.visualstudio.com/api/references/when-clause-contexts
    {
        "key": "ctrl+[BracketRight]",
        "command": "editor.action.fontZoomIn"
    },
    {
        "key": "ctrl+-",
        "command": "editor.action.fontZoomOut"
    },
    {
        "key": "ctrl+0",
        "command": "runCommands",
        "args": {
            "commands": [
                "editor.action.fontZoomReset",
                "workbench.action.zoomReset"
            ]
        }
    },
    {
        "key": "shift+h",
        "command": "workbench.action.previousEditor",
        "when": "vim.mode == 'Normal'"
    },
    {
        "key": "ctrl+pageup",
        "command": "-workbench.action.previousEditor"
    },
    {
        "key": "shift+l",
        "command": "workbench.action.nextEditor",
        "when": "vim.mode == 'Normal'"
    },
    {
        "key": "ctrl+pagedown",
        "command": "-workbench.action.nextEditor"
    },
    {
        "key": "space g g",
        "command": "workbench.scm.focus",
        "when": "!inputFocus || (editorFocus && vim.mode == 'Normal')"
    },
    {
        "key": "space f f",
        "command": "editor.action.formatDocument",
        "when": "editorFocus && vim.mode == 'Normal'"
    },
    {
        "key": "space f s",
        "command": "editor.action.formatSelection",
        "when": "editorFocus && (vim.mode == 'Visual' || vim.mode == 'VisualLine' || vim.mode == 'VisualBlock')"
    },
    {
        "key": "space space",
        "command": "workbench.action.quickOpen",
        "when": "!inputFocus || (editorFocus && vim.mode == 'Normal')"
    },
    {
        "key": "space e",
        "command": "workbench.files.action.focusFilesExplorer",
        "when": "!inputFocus || (editorFocus && vim.mode == 'Normal')"
    },
    {
        "key": "ctrl+q",
        "command": "workbench.action.closeActiveEditor",
        "when": "!editorFocus"
    },
    {
        "key": "ctrl+w",
        "command": "-workbench.action.closeActiveEditor"
    },
    {
        "key": "ctrl+q",
        "command": "-workbench.action.quit"
    },
    {
        "key": "alt+k",
        "command": "editor.action.moveLinesUpAction",
        "when": "editorTextFocus && !editorReadonly && (vim.mode == 'Normal' || vim.mode == 'Visual' || vim.mode == 'VisualLine')"
    },
    {
        "key": "alt+up",
        "command": "-editor.action.moveLinesUpAction",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "alt+j",
        "command": "editor.action.moveLinesDownAction",
        "when": "editorTextFocus && !editorReadonly && (vim.mode == 'Normal' || vim.mode == 'Visual' || vim.mode == 'VisualLine')"
    },
    {
        "key": "alt+down",
        "command": "-editor.action.moveLinesDownAction",
        "when": "editorTextFocus && !editorReadonly"
    },
    // Source control
    // stage
    {
        "key": "space",
        "command": "git.stage",
        "when": "listFocus && focusedView == 'workbench.scm'"
    },
    // commit changes
    {
        "key": "c",
        "command": "runCommands",
        "args": {
            "commands": [
                "list.focusFirst",
                "list.select"
            ]
        },
        "when": "listFocus && focusedView == 'workbench.scm'"
    },
    // Escape from commit message
    {
        "key": "Escape",
        "command": "runCommands",
        "args": {
            "commands": [
                "list.focusFirst",
                "list.focusDown",
                "list.focusDown"
            ]
        },
        "when": "inputFocus && focusedView == 'workbench.scm'"
    },
    // ammend changes to last commit
    {
        "key": "Shift+A",
        "command": "git.commitStagedAmend",
        "when": "listFocus && focusedView == 'workbench.scm'"
    },
    // pull
    {
        "key": "p",
        "command": "git.pull",
        "when": "listFocus && focusedView == 'workbench.scm'"
    },
    // push
    {
        "key": "Shift+P",
        "command": "git.push",
        "when": "listFocus && focusedView == 'workbench.scm'"
    },
    // Explorer
    {
        "key": "c",
        "command": "runCommands",
        "args": {
            "commands": [
                "filesExplorer.copy",
                "filesExplorer.paste"
            ]
        },
        "when": "!inputFocus && listFocus && focusedView == 'workbench.explorer.fileView'"
    },
    {
        "key": "d",
        "command": "deleteFile",
        "when": "!inputFocus && listFocus && focusedView == 'workbench.explorer.fileView'"
    },
    {
        "key": "a",
        "command": "explorer.newFile",
        "when": "!inputFocus && listFocus && focusedView == 'workbench.explorer.fileView'"
    },
    {
        "key": "r",
        "command": "renameFile",
        "when": "!inputFocus && listFocus && focusedView == 'workbench.explorer.fileView'"
    },
    {
        "key": "Escape",
        "command": "workbench.action.focusActiveEditorGroup",
        "when": "!inputFocus && listFocus && focusedView == 'workbench.explorer.fileView'"
    },
]